#This script was written for cloning existing configuration to Yaml file
#V1.0 - Supported cloning function for EnodeB: eutrancell,eutranfreq and relation,gutrancell,gutranfreq,gutrancellrelation,rgw,tls

#Variable initialization
$path1 = ~/CloneToYaml/
get 0 userLabel > $file1

function obtain_rilinks_from_RGW_to_RU
 !echo '++radio:' >> v1.txt
 $template = readfile(template.txt)
 pv $template
 ma rilink_group rilink riportref2 data
  for $mo in rilink_group
   get $mo riportref1 > $temp1
   get $mo riportref2 > $temp2
   $split_separator = ,
   $temp11 = split($temp1)
   $temp22 = split($temp2)
   pv $temp11
   pv $temp12
   $split_separator = =
   $fromFru1 = split($temp11[1])
   $fromFruPort1 = split($temp11[2])
   $fruId1 = split($temp22[1])
   $toPort1 = split($temp22[2])
   pv $fruId1[2]
   pv $fromFru1[2]
   pv $fromFruPort1[2]
   pv $toPort1[2]
   pr $fruId1[2],Rfport=
   $rfports = $nr_of_mosrfPorts
   pv $rfports
   !echo '++++- fruId: '$fruId1[2] >> v1.txt
   !echo '++++++type: "$rfports"' >> v1.txt
   !echo '++++++riLink:' >> v1.txt
   !echo '++++++++- fromFru: '$fromFru1[2] >> v1.txt
   !echo '++++++++++fromFruPort: '$fromFruPort1[2] >> v1.txt
   !echo '++++++++++toPort: '$toPort1[2] >> v1.txt
   !echo ''>> v1.txt
  done
endfunc

function obtain_sector_equipment
 !echo '++sectorequipmentfunc:' >> v1.txt
 ma sec_tor  NodeSupport=1,SectorEquipmentFunction=
  for $mo in sec_tor
   get $mo sectorEquipmentFunctionId > $secId
   get $mo rfbranchref > $temp1
   $temp1 = $temp1 -s .*=\x20 -g
   get $temp1 rfPortRef > $temp2 
   $temp2 = $temp2 -s  FieldReplaceableUnit=   
   $radioFru1 = $temp2 -s ,Rf.*
   !echo '++++- id: "$secId"' >> v1.txt
   !echo '++++++radioFru: '$radioFru1 >> v1.txt
   done
   !echo ''>> v1.txt
endfunc  

function obtain_eutrancell
 !echo '++cell:'>> v1.txt
 ma cells  ENodeBFunction=1,EUtranCellFDD=
 for $mo in cells
  get $mo eUtranCellFDDId > $id1
  get $mo earfcndl > $earfcndl1
  get $mo earfcnul > $earfcnul1
  get $mo ^tac$ > $tac1
  get $mo physicalLayerCellIdGroup > $physicalLayerCellIdGroup1
  get $mo physicalLayerSubCellId > $physicalLayerSubCellId1
  get $mo dlChannelBandwidth > $dlChannelBandwidth1
  get $mo ulChannelBandwidth > $ulChannelBandwidth1
  get $mo sectorCarrierRef > $temp1
  $carrier_ref = $temp1 -s .*>.*Function=1, -g
  get ENodeBFunction=1,$carrier_ref configuredMaxTxPower > $configuredMaxTxPower1
  get ENodeBFunction=1,$carrier_ref sectorFunctionRef > $temp1
  get ENodeBFunction=1,$carrier_ref essScLocalId > $essScLocalId1
  get ENodeBFunction=1,$carrier_ref essScPairId > $essScPairId1
  get ENodeBFunction=1,$carrier_ref noOfTxAntennas > $noOfTxAntennas1
  get $temp1 sectorEquipmentFunctionId > $sectorEquipmentFuncId1  
  get $mo activePlmnList > $activePlmnList1
  get $mo userLabel > $userlabel1 
  !echo '++++- id: "$id1"' >> v1.txt
  if $noOfTxAntennas1 > 2
   !echo '++++++noOfRxAntennas: "$noOfTxAntennas1"' >> v1.txt
   !echo '++++++noOfTxAntennas: "$noOfTxAntennas1"' >> v1.txt
  fi
  !echo '++++++earfcndl: "$earfcndl1"' >> v1.txt
  !echo '++++++earfcnul: "$earfcnul1"' >> v1.txt
  !echo '++++++tac: "$tac1"' >> v1.txt
  get $mo essScLocalId > $essScLocalId1
  if $essScLocalId1 > 0
   !echo '++++++essScLocalId: "$essScLocalId1"' >> v1.txt
   !echo '++++++essScPairId: "$essScPairId1"' >> v1.txt
  fi 
  !echo '++++++physicalLayerCellIdGroup: "$physicalLayerCellIdGroup1"' >> v1.txt
  !echo '++++++physicalLayerSubCellId: "$physicalLayerSubCellId1"' >> v1.txt
  !echo '++++++dlChannelBandwidth: "$dlChannelBandwidth1"' >> v1.txt
  !echo '++++++ulChannelBandwidth: "$ulChannelBandwidth1"' >> v1.txt
  !echo '++++++sectorEquipmentFuncId: "$sectorEquipmentFuncId1"' >> v1.txt
  !echo '++++++configuredMaxTxPower: "$configuredMaxTxPower1"' >> v1.txt
  !echo '++++++userLabel: "$userlabel1"' >> v1.txt
  !echo '++++++mcc: "$activePlmnList1[mcc]"' >> v1.txt
  !echo '++++++mnc: "$activePlmnList1[mnc]"' >> v1.txt
 done
endfunc

function obtain_eutranfreq
 !echo ''>> v1.txt
 !echo '++eutranfreq:'>> v1.txt
 ma eFreq EUtraNetwork=1,EUtranFrequency=
 for $mo in eFreq
  get $mo eUtranFrequencyId > $id1
  get $mo arfcnValueEUtranDl > $arfcnValueEUtranDl1
  !echo '+++- id: "$id1"' >> v1.txt
  !echo '+++++arfcnValueEUtranDl: "$arfcnValueEUtranDl1"' >> v1.txt
 done
endfunc

function obtain_eutranfreqrelation1
 !echo ''>> v1.txt
 !echo '++eutranfreqrelation:' >> v1.txt
 ma freqs EUtraNetwork=.*,EUtranFrequency=
 mr freqs EUtraNetwork=.*,EUtranFrequency= reservedBy !EUtranFreqRelation
 for $mo in freqs
  get $mo reservedby > $temp1
  get $mo eUtranFrequencyId > $eUtranFrequencyId1
  !echo "$temp1" > reservedby.txt
  !cat reservedby.txt  | tail -n +2 | awk 'BEGIN {FS="= "}{print $2}' > reserved2.txt
  !rm reservedby.txt
  obtain_eutranfreqrelation2 $eUtranFrequencyId1
 done
endfunc

function obtain_eutranfreqrelation2
 
 $freqID = $1
 pv $freqID
 $relations = readfile(reserved2.txt)
 pv $relations
 for $lineNumber = 1 to $nr_of_lines
  $temp1 = $relations[$lineNumber]
  $split_separator = ,
  $temp2 = split($temp1)
  $split_separator = =
  $temp3 = split($temp2[2])
  $temp4 = split($temp2[3])  
  $cellId1 = $temp3[2]
  $id1 = $temp4[2]
  !echo '++++- id: "$id1"' >> v1.txt
  !echo '++++++cellId: "$cellId1"' >> v1.txt
  !echo '++++++eUtranFrequencyId: "$freqID"' >> v1.txt
  !echo '++++++cellReselectionPriority: "7"' >> v1.txt
  !rm reserved2.txt
 done
endfunc

function obtain_gutransignal
 !echo ''>> v1.txt
 !echo '++gssf:'>> v1.txt
 ma gutransig ENodeBFunction=1,GUtraNetwork=.*,GUtranSyncSignalFrequency=
 mr ENodeBFunction=1,GUtraNetwork=.*,GUtranSyncSignalFrequency= reservedBy [0]
 for $mo in gutransig
  get $mo gUtranSyncSignalFrequencyId > $gUtranSyncSignalFrequencyId1
  get $mo arfcn > $arfcn1
  get $mo ^band$ > $band1
  get $mo smtcDuration > $smtcDuration1
  get $mo smtcOffset > $smtcOffset1
  get $mo smtcPeriodicity > $smtcPeriodicity1
  get $mo smtcScs > $smtcScs1  
  !echo '++++- gUtranSyncSignalFrequencyId: "$gUtranSyncSignalFrequencyId1"' >> v1.txt
  !echo '++++++arfcn: "$arfcn1"' >> v1.txt
  !echo '++++++band: "$band1"' >> v1.txt
  !echo '++++++smtcDuration: "$smtcDuration1"' >> v1.txt
  !echo '++++++smtcOffset: "$smtcOffset1"' >> v1.txt
  !echo '++++++smtcPeriodicity: "$smtcPeriodicity1"' >> v1.txt
  !echo '++++++smtcScs: "$smtcScs1"' >> v1.txt
 done
endfunc

function obtain_ExternalGUtranCell
 !echo ''>> v1.txt
 !echo '++egutrancell:'>> v1.txt
 ma gutrancells ENodeBFunction=1,GUtraNetwork=.*,ExternalGNodeBFunction=.*,ExternalGUtranCell=
 for $mo in gutrancells
  get $mo externalGUtranCellId > $externalGUtranCellId1
  get $mo physicalLayerCellIdGroup > $physicalLayerCellIdGroup1
  get $mo physicalLayerSubCellId > $physicalLayerSubCellId1
  get $mo localCellId > $localCellId1
  get $mo gUtranSyncSignalFrequencyRef > $temp1
  $split_separator = =
  $temp2 = split($temp1)
  $gUtranSyncSignalFrequencyId1 = $temp2[3]
  !echo '++++- externalGUtranCellId: "$externalGUtranCellId1"' >> v1.txt
  !echo '++++++physicalLayerCellIdGroup: "$physicalLayerCellIdGroup1"' >> v1.txt
  !echo '++++++physicalLayerSubCellId: "$physicalLayerSubCellId1"' >> v1.txt
  !echo '++++++localCellId: "$localCellId1"' >> v1.txt
  !echo '++++++gUtranSyncSignalFrequencyId: "$gUtranSyncSignalFrequencyId1"' >> v1.txt
 done
endfunc

function obtain_gutranfreqrel
 !echo ''>> v1.txt
 !echo '++cellfreq:'>> v1.txt
 ma grel ENodeBFunction=1,EUtranCellFDD=.*,GUtranFreqRelation=
 $Id1 = 0
 for $mo in grel
  $Id1 = $Id1 + 1
  $temp = ldn($mo)
  $split_separator = ,
  $temp2 = split($temp)
  $Eutrancell = $temp2[2]
  get $Eutrancell eUtranCellFDDId > $cellId1
  get $mo gUtranFreqRelationId > $cellfreqId1
  get $mo gUtranSyncSignalFrequencyRef > $temp1
  $split_separator = =
  $temp2 = split($temp1)
  pv $temp2
  $gUtranSyncSignalFrequencyId = $temp2[3]
  !echo '++++- id: "$Id1"' >> v1.txt
  !echo '++++++cellId: "$cellId1"' >> v1.txt
  !echo '++++++cellfreqId: "$cellfreqId1"' >> v1.txt
  !echo '++++++gUtranSyncSignalFrequencyId: "$gUtranSyncSignalFrequencyId1"' >> v1.txt
 done
endfunc

function obtain_gutrancellrelation
 !echo ''>> v1.txt
 !echo '++cellrelation:'>> v1.txt
 ma grelcell ENodeBFunction=1,EUtranCellFDD=.*,GUtranFreqRelation=.*,GUtranCellRelation=
 $Id1 = 0
 for $mo in grelcell
  $Id1 = $Id1 + 1
  get $mo gUtranCellRelationId > $cellrelationId1
  $temp = ldn($mo)
  $split_separator = ,
  $temp2 = split($temp)
  get $temp2[2] eUtranCellFDDId > $cellId1
  get $temp2[2],$temp2[3] gUtranFreqRelationId > $cellfreqId1
  get $mo neighborCellRef > $temp
  $split_separator = =
  $temp2 = split($temp)
  $externalGUtranCellId1 = $temp2[4]
  get $mo essEnabled > $essEnabled1
  !echo '++++- id: "$Id1"' >> v1.txt
  !echo '++++++cellrelationId: "$cellrelationId1"' >> v1.txt
  !echo '++++++cellfreqId: "$cellfreqId1"' >> v1.txt
  !echo '++++++externalGUtranCellId: "$externalGUtranCellId1"' >> v1.txt
  !echo '++++++essEnabled: "$essEnabled1"' >> v1.txt
 done
endfunc

function obtain_rgw
 !echo ''>> v1.txt
 !echo '++rgw:'>> v1.txt
 ma RGW_hw Equipment=1,FieldReplaceableUnit=
 for $mo in RGW_hw
  get $mo productData > $temp
  if $temp[productName] !~ Gateway
   mr RGW_hw $mo 
  fi
 done
 get RGW_hw fieldReplaceableUnitId > $fruId1p
 for $mo in RGW_hw
   $hw = ldn($mo)
 done
 $riPorts1 = empty
 ma rgw_riport $hw,riport=
 for $mo in rgw_riport
  get $mo riPortId > $riportId1
  if $riPorts1 = empty
   $riPorts1 = $riportId1
  else
   $riPorts1 = $riPorts1,$riportId1
  fi
 done
 $split_separator = ,
 $hw1 = split($hw)
 ma rgw_rlink Equipment=1,RiLink= riPortRef2 $hw1[2],RiPort=
 pr rgw_rlink
 get FgwFunction=1,FgwControl=1 ipv6Address > $ipv6IpAddress1
 get  FgwFunction=1,FgwControl=1 transportRef > $vlan1
 get $vlan1 vlanId > $c2cVlan1
 get FgwFunction=1,FgwTermPoint= vlanPortRef > $vlan1
 get $vlan1 vlanId > $llscuVlan1
 for $mo in rgw_rlink
  get $mo riPortRef1 > $temp1
  get $temp1 riPortId > $fromFruPort1
  $temp2 = split($temp1)
  pv $temp2
  get $temp2[1] fieldReplaceableUnitId > $fromFru1
  get $mo riPortRef2 > $temp1
  get $temp1 riPortId > $toPort1
 done
 !echo '++++fruId: "$fruId1"' >> v1.txt
 !echo '++++riPorts: $riPorts1' >> v1.txt
 !echo '++++ipv6IpAddress: "$ipv6IpAddress1"' >> v1.txt
 !echo '++++c2cVlan: "$c2cVlan1"' >> v1.txt
 !echo '++++llscuVlan: "$llscuVlan1"' >> v1.txt
 !echo '++++tlsName: online' >> v1.txt
 !echo '++++riLink:' >> v1.txt
 !echo '++++++- fromFru: "$fromFru1"' >> v1.txt
 !echo '++++++- fromFruPort: "$fromFruPort1"' >> v1.txt
 !echo '++++++- toPort: "$toPort1"' >> v1.txt
endfunc

function obtain_tls
 !echo ''>> v1.txt
 !echo '++tls:'>> v1.txt
 !echo '++++type: online'>> v1.txt
 !echo '++++name: online'>> v1.txt
 get SystemFunctions=1,SecM=1,CertM=1,EnrollmentServerGroup=.*,EnrollmentServer= uri > $EnrollmentServerUri1
 get SystemFunctions=1,SecM=1,CertM=1 reportProgress > $temp1
 $split_separator = \x20
 $temp2 = split($temp1[additionalInfo])
 $installTrustedCertFromUriUri = $temp2[6]
 get SecM=1,CertM=1,EnrollmentAuthority=.* enrollmentCaFingerprint > $fingerprint1
 get SecM=1,CertM=1,EnrollmentAuthority=.* enrollmentAuthorityName > $enrollmentAuthorityName1
 get SystemFunctions=1,SecM=1,CertM=1,NodeCredential= keyInfo > $temp1
 $temp2 = $temp1 -s ) -g
 $temp1 = $temp2 -s \( -g
 $temp2 = split($temp1)
 $keyInfo1 = $temp2[2]
 get SecM=1,CertM=1,NodeCredential= subjectName > $subjectName1
 !echo '++++EnrollmentServerUri: '$EnrollmentServerUri1 >> v1.txt
 !echo '++++installTrustedCertFromUriUri:' $installTrustedCertFromUriUri >> v1.txt
 !echo '++++fingerprint:' $fingerprint1 >> v1.txt
 !echo '++++enrollmentAuthorityName:' $enrollmentAuthorityName1 >> v1.txt
 !echo '++++keyInfo:' $keyInfo1 >> v1.txt
 !echo '++++subjectName:' $subjectName1 >> v1.txt
endfunc

function obtain_fgw_e51_enb_exgnb

 !echo ''>> v1.txt
 !echo '++fgw:'>> v1.txt
 get FgwFunction=1,FgwService=1 ipv6Address > $ipv6IpAddress1
 !echo '++++ipv6IpAddress: "$ipv6IpAddress1"' >> v1.txt 
 get  FgwFunction=1,FgwService=1 transportRef > $temp1
 get $temp1 vlanid > $vlanId1
 get $temp1 encapsulation > $temp2
 $split_separator = =
 $temp3 = split($temp2)
 $port1 = $temp3[2]
 !echo '++++fgci:' >> v1.txt
 !echo '++++++vlanId: "$vlanId1"' >> v1.txt
 !echo '++++++port: "$port1"' >> v1.txt
 get FgwFunction=1,FgwTermPoint=1 vlanPortRef > $temp1
 get $temp1 vlanid > $vlanId1
 !echo '++++llscu:' >> v1.txt
 !echo '++++++vlanId: "$vlanId1"' >> v1.txt
 !echo '++++tlsname: online' >> v1.txt
 !echo ''>> v1.txt
 get ENodeBFunction=1,GUtraNetwork=1,ExternalGNodeBFunction= eNBVlanPortRef > $temp1
 get $temp1 vlanid > $vlanId1
 get $temp1 encapsulation > $temp2
 $split_separator = =
 $temp3 = split($temp2)
 $port1 = $temp3[2]
 !echo '++e51:' >> v1.txt
 !echo '++++port: "$port1"' >> v1.txt
 !echo '++++vlanId: "$vlanId1"' >> v1.txt
 get ENodeBFunction=1 eNBId > $id1
 get ENodeBFunction=1 eNodeBPlmnId > $temp1
 $mcc1 = $temp1[mcc]
 $mnc1 = $temp1[mnc]
 !echo ''>> v1.txt
 !echo '++eNB:' >> v1.txt
 !echo '++++id: "$id1"' >> v1.txt
 !echo '++++mcc: "$mcc1"' >> v1.txt
 !echo '++++mnc: "$mnc1"' >> v1.txt
 get ENodeBFunction=1,GUtraNetwork=1,ExternalGNodeBFunction= gNodeBId$ > $id1
 get ENodeBFunction=1,GUtraNetwork=1,ExternalGNodeBFunction= gNodeBPlmnId$ > $temp1
 $mcc1 = $temp1[mcc]
 $mnc1 = $temp1[mnc]
 get ENodeBFunction=1,GUtraNetwork=1,ExternalGNodeBFunction=.*,TermPointToGNB= ipv6Address$ > $cucpAddress1
 get GNBDUFunction=1,TermPointToGNBCUCP= ipv6Address > $f1c1
 !echo ''>> v1.txt
 !echo '++exGNB:' >> v1.txt
 !echo '++++id: "$id1"' >> v1.txt
 !echo '++++mcc: "$mcc1"' >> v1.txt
 !echo '++++mnc: "$mnc1"' >> v1.txt
 !echo '++++cucpAddress: "$cucpAddress1"' >> v1.txt
 !echo '++++f1c: "$f1c1"' >> v1.txt
endfunc

function obtain_boards
 get NodeSupport=1,MpClusterHandling=1 primaryCoreRef> $field1
 get $field1 productData > $temp1
 $split_separator = \x20
 $temp2 = split($temp1)


endfunc


#Main program starts here
lt all
pr ^enodebfunction=1
if $nr_of_mos > 0
 obtain_rilinks_from_RGW_to_RU
 obtain_sector_equipment
 obtain_eutrancell
 obtain_eutranfreq
 obtain_eutranfreqrelation1
 obtain_gutransignal
 obtain_ExternalGUtranCell
 obtain_gutranfreqrel
 obtain_gutrancellrelation
 obtain_rgw
 obtain_tls
 obtain_fgw_e51_enb_exgnb
 obtain_boards
 
 !cat v1.txt|sed 's,+, ,g' > $path1$file1.yaml
 !rm v1.txt
fi