#This script is written for check supported licenses on 6631 HW
#Must be run without x so runx is NOT applicable here
#Command: run <path>/check_license_support.mos
#V1.2 modified input files
#Prior to run this script run the license_collector.mos in the old 6630 node

lt all

function unsupported_lkf
 $temp = $1
 $split_separator = =
 $temp1 = split($temp)
 unset $split_separator
 $temp2 = split($temp1[4]
 pv $temp2
 !cat $path/$lkf_set | grep $temp2[1] >> ~/$sitename_report.log
 $alma = readinput(wait)
endfunc

$path = /home/tems/migration/license_lift
$date = `date "+%Y-%m-%d %H:%M:%S"`
ma current_sw upgradepackage ^state$ 7
get current_sw upgradePackageId > $curr_sw_radio
$curr_sw_radio =  $curr_sw_radio -s - -r _
$find_sw = `cat /home/tems/scriptek/upgrade_package_list.txt | grep $curr_sw_radio`
get 0 ^managedElementId > $sitename

!echo '///////////////////////////////////////////////////////////////////////////////' >> ~/$sitename_report.log
!echo '// This Following feature are activated originally but not supported currently' >> ~/$sitename_report.log
!echo '// Site name: $sitename' >> ~/$sitename_report.log
!echo '// SW level: $find_sw' >> ~/$sitename_report.log
!echo '// Date: $date' >> ~/$sitename_report.log
!echo '///////////////////////////////////////////////////////////////////////////////' >> ~/$sitename_report.log
!echo ' ' >> ~/$sitename_report.log


 $command = readfile($path/$sitename_license.txt)
 $lkf_set = $sitename_inventory.txt


for $lineNumber = 1 to $nr_of_lines
 if $command[$lineNumber] ~ SystemFunctions 
  lset $command[$lineNumber]
 fi
 if $returncode = 1 
  pv $command[$lineNumber]
  unsupported_lkf $command[$lineNumber]
 fi
done

!echo ' ' >> ~/$sitename_report.log
!echo '//////////////////////////////////Report-END////////////////////////////////////' >> ~/$sitename_report.log